==5709== Memcheck, a memory error detector
==5709== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==5709== Using Valgrind-3.15.0-608cb11914-20190413 and LibVEX; rerun with -h for copyright info
==5709== Command: ./libso_stdio.so
==5709== Parent PID: 4469
==5709== 
--5709-- 
--5709-- Valgrind options:
--5709--    --leak-check=full
--5709--    --show-leak-kinds=all
--5709--    --track-origins=yes
--5709--    --verbose
--5709--    --log-file=valgrind-out.txt
--5709-- Contents of /proc/version:
--5709--   Linux version 5.4.0-66-generic (buildd@lgw01-amd64-039) (gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04)) #74-Ubuntu SMP Wed Jan 27 22:54:38 UTC 2021
--5709-- 
--5709-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand
--5709-- Page sizes: currently 4096, max supported 4096
--5709-- Valgrind library directory: /usr/lib/x86_64-linux-gnu/valgrind
--5709-- Reading syms from /home/student/so/assignments/2-stdio/checker-lin/libso_stdio.so
--5709-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux
--5709--    object doesn't have a symbol table
--5709--    object doesn't have a dynamic symbol table
--5709-- Scheduler: using generic scheduler lock implementation.
--5709-- Reading suppressions file: /usr/lib/x86_64-linux-gnu/valgrind/default.supp
==5709== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-5709-by-student-on-???
==5709== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-5709-by-student-on-???
==5709== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-5709-by-student-on-???
==5709== 
==5709== TO CONTROL THIS PROCESS USING vgdb (which you probably
==5709== don't want to do, unless you know exactly what you're doing,
==5709== or are doing some strange experiment):
==5709==   /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=5709 ...command...
==5709== 
==5709== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==5709==   /path/to/gdb ./libso_stdio.so
==5709== and then give GDB the following command
==5709==   target remote | /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=5709
==5709== --pid is optional if only one valgrind process is running
==5709== 
==5709== 
==5709== Process terminating with default action of signal 11 (SIGSEGV)
==5709==  Access not within mapped region at address 0x0
==5709==    at 0x1: ???
==5709==    by 0x1FFF000312: ???
==5709==  If you believe this happened as a result of a stack
==5709==  overflow in your program's main thread (unlikely but
==5709==  possible), you can try to increase the size of the
==5709==  main thread stack using the --main-stacksize= flag.
==5709==  The main thread stack size used in this run was 8388608.
==5709== 
==5709== HEAP SUMMARY:
==5709==     in use at exit: 0 bytes in 0 blocks
==5709==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==5709== 
==5709== All heap blocks were freed -- no leaks are possible
==5709== 
==5709== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
